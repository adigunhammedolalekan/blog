// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account/account.proto

package service_account

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d492a0187472a3b, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Account              *Account `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d492a0187472a3b, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type GetAccountRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d492a0187472a3b, []int{2}
}

func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(m, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "service.account.Account")
	proto.RegisterType((*Response)(nil), "service.account.Response")
	proto.RegisterType((*GetAccountRequest)(nil), "service.account.GetAccountRequest")
}

func init() { proto.RegisterFile("proto/account/account.proto", fileDescriptor_5d492a0187472a3b) }

var fileDescriptor_5d492a0187472a3b = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4a, 0xc4, 0x40,
	0x0c, 0x86, 0xdd, 0xba, 0xbb, 0xad, 0x51, 0x57, 0x0c, 0x22, 0xe3, 0x7a, 0x91, 0x9e, 0x04, 0xa1,
	0x42, 0x7d, 0x82, 0x45, 0x54, 0x3c, 0x78, 0xa9, 0x4f, 0x30, 0xb6, 0x41, 0x8b, 0xb6, 0x53, 0x9b,
	0x8c, 0xbe, 0xb5, 0xcf, 0x20, 0x3b, 0x9d, 0x51, 0xb0, 0xe8, 0xc1, 0x53, 0xf3, 0x7f, 0x09, 0xc9,
	0xff, 0x97, 0x81, 0xe3, 0xae, 0x37, 0x62, 0xce, 0x75, 0x59, 0x1a, 0xdb, 0x4a, 0xf8, 0x66, 0x8e,
	0xe2, 0x1e, 0x53, 0xff, 0x56, 0x97, 0x94, 0x79, 0x9c, 0x5a, 0x88, 0x57, 0x43, 0x89, 0x0b, 0x88,
	0xea, 0x4a, 0x4d, 0x4e, 0x26, 0xa7, 0x5b, 0x45, 0x54, 0x57, 0x88, 0x30, 0x6d, 0x75, 0x43, 0x2a,
	0x72, 0xc4, 0xd5, 0x78, 0x00, 0x33, 0x6a, 0x74, 0xfd, 0xa2, 0x36, 0x1d, 0x1c, 0xc4, 0x9a, 0x8a,
	0x79, 0xa6, 0x56, 0x4d, 0x07, 0xea, 0x04, 0x2e, 0x21, 0xe9, 0x34, 0xf3, 0xbb, 0xe9, 0x2b, 0x35,
	0x73, 0x8d, 0x2f, 0x9d, 0x76, 0x90, 0x14, 0xc4, 0x9d, 0x69, 0x99, 0xf0, 0x10, 0xe6, 0x2c, 0x5a,
	0x2c, 0xbb, 0xdb, 0x49, 0xe1, 0x15, 0x2a, 0x88, 0x1b, 0x62, 0xd6, 0x8f, 0xc1, 0x42, 0x90, 0x98,
	0x43, 0xec, 0xfd, 0x3b, 0x1f, 0xdb, 0xb9, 0xca, 0x7e, 0xe4, 0xca, 0x7c, 0xa8, 0x22, 0x0c, 0xa6,
	0x67, 0xb0, 0x7f, 0x43, 0x12, 0x30, 0xbd, 0x5a, 0x62, 0x59, 0x9f, 0xb6, 0x4c, 0xfd, 0x6d, 0x88,
	0xed, 0x55, 0xfe, 0x31, 0x81, 0x85, 0x1f, 0xbd, 0x1f, 0x16, 0xe3, 0x35, 0xec, 0x5e, 0xf6, 0xa4,
	0x85, 0xc2, 0xef, 0xfa, 0xf5, 0xe6, 0xf2, 0x68, 0xd4, 0x09, 0x59, 0xd3, 0x0d, 0xbc, 0x82, 0x9d,
	0x95, 0x95, 0x27, 0x6a, 0xa5, 0x2e, 0xb5, 0xd0, 0x7f, 0xd7, 0xdc, 0x01, 0x7c, 0xc7, 0xc1, 0x74,
	0x34, 0x3a, 0xca, 0xfa, 0xe7, 0xba, 0x87, 0xb9, 0x7b, 0x1e, 0x17, 0x9f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x20, 0x05, 0x98, 0xb9, 0x3d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AccountService service

type AccountServiceClient interface {
	CreateAccount(ctx context.Context, in *Account, opts ...client.CallOption) (*Response, error)
	Authenticate(ctx context.Context, in *Account, opts ...client.CallOption) (*Response, error)
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...client.CallOption) (*Response, error)
}

type accountServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAccountServiceClient(serviceName string, c client.Client) AccountServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "service.account"
	}
	return &accountServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *Account, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.CreateAccount", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Authenticate(ctx context.Context, in *Account, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Authenticate", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.GetAccount", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceHandler interface {
	CreateAccount(context.Context, *Account, *Response) error
	Authenticate(context.Context, *Account, *Response) error
	GetAccount(context.Context, *GetAccountRequest, *Response) error
}

func RegisterAccountServiceHandler(s server.Server, hdlr AccountServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AccountService{hdlr}, opts...))
}

type AccountService struct {
	AccountServiceHandler
}

func (h *AccountService) CreateAccount(ctx context.Context, in *Account, out *Response) error {
	return h.AccountServiceHandler.CreateAccount(ctx, in, out)
}

func (h *AccountService) Authenticate(ctx context.Context, in *Account, out *Response) error {
	return h.AccountServiceHandler.Authenticate(ctx, in, out)
}

func (h *AccountService) GetAccount(ctx context.Context, in *GetAccountRequest, out *Response) error {
	return h.AccountServiceHandler.GetAccount(ctx, in, out)
}
